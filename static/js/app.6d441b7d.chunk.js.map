{"version":3,"sources":["assets/images/logo.png","assets/images/no-photo.png","web-build/register-service-worker.js","assets/fonts/Roboto-Black.ttf","assets/fonts/Roboto-BlackItalic.ttf","assets/fonts/Roboto-Bold.ttf","assets/fonts/Roboto-BoldItalic.ttf","assets/fonts/Roboto-Italic.ttf","assets/fonts/Roboto-Light.ttf","assets/fonts/Roboto-LightItalic.ttf","assets/fonts/Roboto-Medium.ttf","assets/fonts/Roboto-MediumItalic.ttf","assets/fonts/Roboto-Regular.ttf","assets/fonts/Roboto-Thin.ttf","assets/fonts/Roboto-ThinItalic.ttf","assets/images/ocean-bg.jpg","components/activities/login_activity/reducers.jsx","components/stores.jsx","components/activities/login_activity/style.js","components/shared/TextComponent/index.jsx","components/shared/TextComponent/TextComponent.jsx","components/shared/Button/Button.jsx","components/shared/Button/index.jsx","api_fetcher.jsx","components/activities/login_activity/LoginView.jsx","components/activities/login_activity/LoginActivity.jsx","components/activities/login_activity/EnterNumberView.jsx","components/activities/login_activity/EnterCodeView.jsx","components/activities/login_activity/SelectProfilePicture.jsx","components/activities/login_activity/EnterFullNameView.jsx","components/activities/login_activity/ProfileView.jsx","components/activities/UpdateProfile/UpdateProfile.jsx","components/activities/UpdateProfile/index.jsx","components/SplashScreenActivity.jsx","App.js","index.js"],"names":["module","exports","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","initialState","phone","dial_code","code","firebase_uid","full_name","profile_photo","token","isUserLoggedIn","combineReducers","loginReducer","state","action","type","actions","PROFILE_SET_DIAL_CODE","payload","PROFILE_SET_PHONE","PROFILE_SET_CODE","PROFILE_SET_FIREBASE_UID","AsyncStorage","setItem","PROFILE_SET_FULL_NAME","PROFILE_SET_PROFILE_PHOTO","PROFILE_SET_TOKEN","PROFILE_SET_INFO","PROFILE_SET_USER_LOGGED_IN","createStore","loginActions","StyleSheet","create","view","marginTop","padding","flex","justifyContent","alignItems","header","fontSize","fontWeight","fontFamily","color","letterSpacing","lineHeight","subheader","marginBottom","picker","borderColor","borderWidth","backgroundColor","width","borderRadius","height","toolbarHeader","finalizeButton","position","bottom","TextComponent","loaded","Font","RobotoBlack","require","RobotoBlackItalic","RobotoBold","RobotoBoldItalic","RobotoItalic","RobotoLight","RobotoLightItalic","RobotoMedium","RobotoMediumItalic","RobotoRegular","RobotoThin","RobotoThinItalic","this","setState","style","props","undefined","Text","children","React","Component","Button","TouchableOpacity","styles","touchable","onPress","View","button","buttonText","title","propTypes","PropTypes","string","func","oneOfType","object","instanceOf","paddingVertical","paddingHorizontal","textTransform","textAlign","ApiFetcher","endpoint","options","credentials","body","FormData","method","getItem","uid","append","headers","latitude","longitude","fetch","config","api_url_v1","logo","LoadingView","Image","source","LoginView","_interval","checked","clearInterval","times","setInterval","login","Object","keys","length","navigation","replace","connect","dispatch","setPhone","setDialCode","setCode","setFirebaseUid","setToken","LoginActivity","Platform","select","ios","android","web","EnterNumberView","selectedCode","codes","parseInt","trim","Alert","alert","text","log","Fragment","flexDirection","leftElement","centerElement","Picker","selectedValue","JSON","stringify","onValueChange","index","parse","map","Item","label","name","value","key","TextInput","keyboardType","maxLength","textContentType","autoCompleteType","onChangeText","onEnterPhone","bind","borderBottomColor","borderBottomWidth","sendSMS","EnterCodeView","uuid","verify","apiFetcher","noPhoto","SelectProfilePicture","_takePhoto","a","async","Permissions","cameraPerm","status","cameraRollPerm","ImagePicker","result","cancelled","setProfilePhoto","uri","_pickImage","mediaTypes","Images","allowsEditing","aspect","quality","dataURI","byteString","decode","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","file","getData","response","json","message","setInfo","data","profile","setUserLoggedIn","profilePhoto","profile_picture","uploadPhoto","setFullName","fullName","finalize","oceanBg","Tab","createMaterialTopTabNavigator","ProfileView","container","ImageBackground","onLeftElementPress","openDrawer","TouchableHighlight","avatar","navigate","avatarImage","size","marginLeft","bodyContent","Navigator","tabNavigation","Screen","component","alignSelf","paddingTop","description","buttonContainer","editIcon","UpdateProfile","ScrollView","placeholder","updateProfile","Stack","createStackNavigator","Drawer","createDrawerNavigator","SplashScreenActivity","callUserOnline","NavigationContainer","initialRouteName","drawerType","drawerPosition","drawerStyle","statusBarAnimation","edgeWidth","minSwipeDistance","hideStatusBar","screenOptions","drawerIcon","focused","mode","headerShown","EnterFullNameView","App","store","registerRootComponent"],"mappings":"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","file":"static/js/app.6d441b7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bb3a4355.png\";","module.exports = __webpack_public_path__ + \"static/media/no-photo.82c8fc38.png\";","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('./expo-service-worker.js', { scope: './' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Black.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-BlackItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-BoldItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Italic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-LightItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Medium.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-MediumItalic.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Thin.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-ThinItalic.ttf\";","module.exports = __webpack_public_path__ + \"static/media/ocean-bg.2f9279b5.jpg\";","import { combineReducers } from 'redux';\nimport actions from './actions.json';\nimport { AsyncStorage } from 'react-native';\n\nlet initialState = {\n    phone: '',\n    dial_code: '',\n    code: '',\n    firebase_uid: '',\n    full_name: '',\n    profile_photo: '',\n    token: '',\n    isUserLoggedIn: false,\n    info: {}\n}\n\nconst loginReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actions.PROFILE_SET_DIAL_CODE:\n            return {\n                ...state,\n                dial_code: action.payload\n            }\n        case actions.PROFILE_SET_PHONE:\n            return {\n                ...state,\n                phone: action.payload\n            }\n        case actions.PROFILE_SET_CODE:\n            return {\n                ...state,\n                code: action.payload\n            }\n        case actions.PROFILE_SET_FIREBASE_UID:\n            \n            AsyncStorage.setItem('firebase_uid', action.payload)\n            .catch(error => {});\n\n            return {\n                ...state,\n                firebase_uid: action.payload\n            }\n        case actions.PROFILE_SET_FULL_NAME:\n            return {\n                ...state,\n                full_name: action.payload\n            }\n        case actions.PROFILE_SET_PROFILE_PHOTO:\n            return {\n                ...state,\n                profile_photo: action.payload\n            }\n        case actions.PROFILE_SET_TOKEN:\n            AsyncStorage.setItem('token', action.payload)\n            .catch(error => {});\n\n            return {\n                ...state,\n                token: action.payload\n            }\n        case actions.PROFILE_SET_INFO:\n            return {\n                ...state,\n                info: action.payload\n            }\n        case actions.PROFILE_SET_USER_LOGGED_IN:\n            return {\n                ...state,\n                isUserLoggedIn: action.payload === true\n            }\n        default:\n            return state || initialState;\n    }\n}\n\nexport default combineReducers({\n    loginReducer,\n})","import { createStore } from 'redux';\nimport loginReducer from './activities/login_activity/reducers';\nimport loginActions from './activities/login_activity/actions.json';\n\nexport default createStore(loginReducer);\n\nexport const actions = {\n    ...loginActions\n}\n\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n    view: {\n        // backgroundColor: '#ffffff',\n        marginTop: 20,\n        padding: 0,\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    header: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        fontFamily: 'RobotoBlack',\n        color: '#666666',\n        letterSpacing: 4,\n        lineHeight: 36\n    },\n    subheader: {\n        fontSize: 12,\n        fontWeight: 'normal',\n        color: '#666666',\n        fontFamily: 'RobotoRegular',\n        lineHeight: 28,\n        marginBottom: 10\n\n    },\n    picker: {\n        borderColor: null,\n        borderWidth: null,\n        backgroundColor: null,\n        width: '40%'\n    },\n    profile_photo: {\n        borderRadius: 120,\n        width: 200,\n        height: 200,\n        marginBottom: 20\n    },\n    toolbarHeader: {\n        color: '#ffffff',\n        fontSize: 20,\n        fontFamily: 'RobotoRegular',\n    }, \n    finalizeButton: {\n        position: 'absolute',\n        bottom: 10\n    }\n})","import TextComponent from './TextComponent';\n\nexport default TextComponent;","import React from 'react';\nimport {Text} from 'react-native';\nimport * as Font from 'expo-font';\n\n\nexport default class TextComponent extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            loaded: false\n        }\n    }\n    \n    async componentWillMount () {\n        await Font.loadAsync({\n            RobotoBlack: require('../../../assets/fonts/Roboto-Black.ttf'),\n            RobotoBlackItalic: require('../../../assets/fonts/Roboto-BlackItalic.ttf'),\n            RobotoBold: require('../../../assets/fonts/Roboto-Bold.ttf'),\n            RobotoBoldItalic: require('../../../assets/fonts/Roboto-BoldItalic.ttf'),\n            RobotoItalic: require('../../../assets/fonts/Roboto-Italic.ttf'),\n            RobotoLight: require('../../../assets/fonts/Roboto-Light.ttf'),\n            RobotoLightItalic: require('../../../assets/fonts/Roboto-LightItalic.ttf'),\n            RobotoMedium: require('../../../assets/fonts/Roboto-Medium.ttf'),\n            RobotoMediumItalic: require('../../../assets/fonts/Roboto-MediumItalic.ttf'),\n            RobotoRegular: require('../../../assets/fonts/Roboto-Regular.ttf'),\n            RobotoThin: require('../../../assets/fonts/Roboto-Thin.ttf'),\n            RobotoThinItalic: require('../../../assets/fonts/Roboto-ThinItalic.ttf'),\n        });\n\n        this.setState({\n            ...this.state,\n            loaded: true\n        })\n    }\n\n    render () {\n\n        let style = this.props.style || {};\n\n        \n\n        if (this.state.loaded) {\n            // if (!style.fontFamily) {\n            //     style = {\n            //         ...style,\n            //         fontFamily: 'RobotoRegular'\n            //     }\n            // }\n\n            return <Text style={style}>{this.props.children}</Text>\n        } else {\n            if (style.fontFamily) {\n                style = {\n                    ...style,\n                    fontFamily: undefined\n                }\n            }\n\n            return <Text style={style}>{this.props.children}</Text>\n        }\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    TouchableOpacity,\n    StyleSheet,\n    View\n} from 'react-native';\n\nimport Text from '../TextComponent';\n\nexport default class Button extends React.Component {\n    render () {\n        const style = this.props.style || {};\n\n        return (\n            <TouchableOpacity style={styles.touchable} onPress={this.props.onPress || function(){}}>\n                <View style={style.button || styles.button}>\n                    <Text style={style.buttonText || styles.buttonText}>{this.props.title}</Text>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n}\n\nButton.propTypes = {\n    title: PropTypes.string,\n    onPress: PropTypes.func,\n    style: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.instanceOf(StyleSheet)\n    ])\n}\n\nconst styles = StyleSheet.create({\n    touchable: {\n        marginTop: 10\n    },\n    button: {\n        borderRadius: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 7,\n        backgroundColor: 'rgb(33, 150, 243)',\n        width: 200,\n    },\n    buttonText: {\n        color: '#ffffff',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        textAlign: 'center'\n    }\n});","import Button from './Button';\n\nexport default Button;","import config from './config.json';\nimport { AsyncStorage } from 'react-native';\nimport * as Location from 'expo-location';\n\nexport default class ApiFetcher {\n    async getData (endpoint, options={}, credentials=true) {\n\n        // AsyncStorage.clear();\n\n        if (options.body === undefined) {\n            const body = new FormData();\n            options.body = body;\n        }\n\n        if (options.method === undefined) {\n            options.method = 'POST';\n        }\n\n        const uid = await AsyncStorage.getItem('firebase_uid');\n        if (uid) {\n            options.body.append('uid', uid);\n        }\n\n        if (credentials === true) {\n            const token = await AsyncStorage.getItem('token');\n            if (token) {\n                options.credentials = 'same-origin';\n                options.headers = {\n                    'Authorization': 'Token ' + token\n                }\n            }\n        }\n\n        if (endpoint === 'user_online') {\n\n            let latitude, longitude;\n            \n            // const {status} = await Location.requestPermissionsAsync();\n            // if (status === 'granted') {\n            //     try {\n            //         const location = await Location.getCurrentPositionAsync({\n            //             timeout: 3\n            //         });\n            //         latitude = location.coords.latitude;\n            //         longitude = location.coords.longitude;\n            //     } catch (E) {\n                    \n            //     }\n            // }\n\n\n            if (latitude && longitude) {\n                options.body.append('last_location', `${latitude},${longitude}`)\n            } else {\n                options.body.append('last_location', null);\n            }\n            \n        }\n\n        return fetch(`${config.api_url_v1}${endpoint}/`, options)\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport style from './style';\nimport {\n    View,\n    Image,\n} from 'react-native';\nimport {Text, Button} from '../../shared';\n\nimport ApiFetcher from '../../../api_fetcher';\nimport { actions } from '../../stores';\n\nconst logo = require('../../../assets/images/logo.png');\nconst apiFetcher = new ApiFetcher();\n\n\nclass LoadingView extends React.Component {\n    render () {\n        return (\n            <View style={style.view}>\n                <Image source={logo} style={{\n                    width: 100,\n                    height: 100\n                }} />\n                <Text style={style.header}>Bottlex</Text>\n                <Text style={style.subheader}>Bottlex realizes your wishes</Text>\n                <Text style={style.subheader}>Loading...</Text>\n            </View>\n        );\n    }\n}\n\nclass LoginView extends React.Component {\n\n    _interval = 0;\n\n    constructor () {\n        super();\n\n        this.state = {\n            checked: 0\n        }\n    }\n\n    componentWillUnmount () {\n        clearInterval(this._interval);\n    }\n\n    componentDidMount () {\n        let times = 0;\n        this._interval = setInterval(() => {\n            if (typeof this.props.login.info === 'object' && Object.keys(this.props.login.info).length) {\n                clearInterval(this._interval);\n                this.props.navigation.replace('profile');\n            }\n\n            if (times > 3) {\n                clearInterval(this._interval);\n                this.setState({\n                    ...this.state,\n                    checked: 1\n                });\n            }\n\n            times++;\n        }, 1000);\n    }\n\n    render () {\n        if (this.state.checked === 0) {\n            return <LoadingView />\n        } else {\n            return (\n                <View style={style.view}>\n                    <Image source={logo} style={{\n                        width: 100,\n                        height: 100\n                    }} />\n                    <Text style={style.header}>Bottlex</Text>\n                    <Text style={style.subheader}>Bottlex realizes your wishes</Text>\n                    <Button title=\"Start Bottlex\" onPress={() => this.props.navigation.replace('enter_number')} />\n                </View>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setPhone: payload => dispatch({type: actions.PROFILE_SET_PHONE, payload}),\n    setDialCode: payload => dispatch({type: actions.PROFILE_SET_DIAL_CODE, payload}),\n    setCode: payload => dispatch({type: actions.PROFILE_SET_CODE, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n    setToken: payload => dispatch({type: actions.PROFILE_SET_TOKEN, payload}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);","import React from 'react';\nimport {connect} from 'react-redux';\nimport LoginView from './LoginView';\nimport {Platform} from 'react-native';\nimport {actions} from '../../stores';\n\n\nclass LoginActivity extends React.Component {\n\n    constructor () {\n        super();\n    }\n\n    componentDidMount () {\n        \n    }\n    \n    \n    render () {\n        const instructions = Platform.select({\n            ios: <LoginView />,\n            android: <LoginView />,\n            web: <LoginView />\n        });\n\n        return instructions;\n    }\n}\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setCode: payload => dispatch({type: actions.PROFILE_SET_CODE, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginActivity);","import '@expo/match-media';\nimport MediaQuery from \"react-responsive\";\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport style from './style';\nimport {\n    TextInput,\n    View,\n    Image,\n    Picker,\n    Alert\n} from 'react-native';\nimport {Text, Button} from '../../shared';\nimport {\n    Toolbar\n} from 'react-native-material-ui';\nimport codes from './country_phone_prefixes.json';\nimport { actions } from '../../stores';\n\nconst logo = require('../../../assets/images/logo.png');\n\nclass EnterNumberView extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            selectedCode: codes[0],\n            width: \"70%\"\n        }\n    }\n\n    onEnterPhone (phone) {\n        phone = phone && parseInt(phone.replace(this.state.selectedCode.dial_code, \"\")) + \"\";\n        phone = phone.trim().replace(/[^\\d]+/, '');\n        \n        this.props.setPhone(phone);\n        this.props.setDialCode(this.state.selectedCode.dial_code);\n    }\n\n    sendSMS () {\n        if (!this.props.login.phone) {\n            return Alert.alert(\n                \"Warning\",\n                \"Enter your phone number\",\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n        }\n\n        this.props.navigation.replace('enter_code');\n    }\n\n    render () {\n\n        return (\n            <React.Fragment>\n                <View style={{\n                    flexDirection: 'column',\n                    height: 50\n                }}>\n                    <Toolbar \n                        leftElement={<Image source={logo} style={{\n                            width: 30,\n                            height: 30\n                        }} />}\n                        centerElement={<Text style={style.toolbarHeader}>Your Phone</Text>}\n                    />\n                </View>\n                <View style={style.view}>\n                    <Picker\n                        selectedValue={JSON.stringify(this.state.selectedCode)}\n                        style={{\n                            borderColor: null,\n                            borderWidth: null,\n                            backgroundColor: null,\n                            width: this.state.width\n                        }}\n                        onValueChange={(selectedCode, index) => {\n\n                            this.setState({\n                                ...this.state,\n                                selectedCode: JSON.parse(selectedCode)\n                            });\n                        }}\n                    >\n                        {codes.map((code, index) => <Picker.Item label={`${code.name} ${code.dial_code}`} value={JSON.stringify(code)} key={index} />)}\n                    </Picker>\n                    <TextInput \n                        keyboardType=\"phone-pad\"\n                        maxLength={18}\n                        textContentType=\"telephoneNumber\"\n                        autoCompleteType=\"tel\"\n                        value={`${this.state.selectedCode.dial_code}  ${this.props.login.phone}`}\n                        onChangeText={this.onEnterPhone.bind(this)}\n                        style={{\n                            borderBottomColor: '#cccccc',\n                            borderBottomWidth: 1,\n                            marginTop: 20,\n                            marginBottom: 20,\n                            width: this.state.width\n                        }} \n                    />\n                    <Text style={{\n                        fontSize: 14,\n                        color: '#666666',\n                        marginBottom: 20,\n                        width: this.state.width,\n                        textAlign: 'center'\n                    }}>Please select your country code and enter your phone number</Text>\n                    <Button title=\"Done\" onPress={this.sendSMS.bind(this)} />\n                </View>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setPhone: payload => dispatch({type: actions.PROFILE_SET_PHONE, payload}),\n    setDialCode: payload => dispatch({type: actions.PROFILE_SET_DIAL_CODE, payload}),\n    setCode: payload => dispatch({type: actions.PROFILE_SET_CODE, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterNumberView);","import React from 'react';\nimport {connect} from 'react-redux';\nimport uuid from 'react-uuid';\nimport style from './style';\nimport {\n    TextInput,\n    View,\n    Image,\n    Alert\n} from 'react-native';\nimport { Text, Button } from '../../shared';\n\nimport {\n    Toolbar\n} from 'react-native-material-ui';\n\nimport config from '../../../config.json';\nimport { actions } from '../../stores';\nconst logo = require('../../../assets/images/logo.png');\n\nclass EnterCodeView extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            width: \"70%\"\n        }\n    }\n\n    verify () {\n        if (!this.props.login.code) {\n            return Alert.alert(\n                \"Warning\",\n                \"Enter security code\",\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n        }\n        \n        this.props.setFirebaseUid(uuid());\n        this.props.navigation.replace('enter_full_name');\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <View style={{\n                    flexDirection: 'column',\n                    height: 50\n                }}>\n                    <Toolbar \n                        leftElement={<Image source={logo} style={{\n                            width: 30,\n                            height: 30\n                        }} />}\n                        centerElement={<Text style={style.toolbarHeader}>Secret Code</Text>}\n                    />\n                </View>\n                <View style={style.view}>\n                    <Text style={{\n                        fontSize: 14,\n                        color: '#666666',\n                        marginBottom: 20,\n                        width: this.state.width,\n                        textAlign: 'center'\n                    }}>We've sent an SMS with an activation code to your phone {this.props.login.dial_code}{this.props.login.phone}</Text>\n                    <TextInput \n                        keyboardType=\"decimal-pad\"\n                        maxLength={6}\n                        value={this.props.login.code}\n                        onChangeText={code => this.props.setCode(code)}\n                        style={{\n                            borderBottomColor: '#cccccc',\n                            borderBottomWidth: 1,\n                            marginTop: 20,\n                            marginBottom: 20,\n                            width: this.state.width,\n                            textAlign: 'center'\n                        }} \n                    />\n                    \n                    <Button title=\"Verify\" onPress={this.verify.bind(this)} />\n\n                    <Text \n                        onPress={() => {\n                            this.props.setCode('');\n                            this.props.navigation.replace('enter_number');\n                        }}\n                        style={{\n                            color: 'rgb(33, 150, 243)',\n                            fontWeight: 'bold',\n                            position: 'absolute',\n                            bottom: 30,\n                            fontSize: 18\n                        }}>Wrong number?</Text>\n                </View>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setCode: payload => dispatch({type: actions.PROFILE_SET_CODE, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterCodeView);","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport {decode, encode} from 'base-64';\nimport uuid from 'react-uuid';\n\nimport {\n    View,\n    Image\n} from 'react-native';\nimport {Text, Button} from '../../shared';\n\nimport {\n    Toolbar\n} from 'react-native-material-ui';\n\nimport ApiFetcher from '../../../api_fetcher';\nconst apiFetcher = new ApiFetcher();\n\nimport style from './style';\nimport { actions } from '../../stores';\nconst logo = require('../../../assets/images/logo.png');\nconst noPhoto = require('../../../assets/images/no-photo.png');\n\n\nclass SelectProfilePicture extends React.Component {\n\n  componentDidMount () {\n    \n  }\n\n  b64toBlob(dataURI) {\n      var byteString = decode(dataURI.split(',')[1]);\n      var ab = new ArrayBuffer(byteString.length);\n      var ia = new Uint8Array(ab);\n\n      for (var i = 0; i < byteString.length; i++) {\n          ia[i] = byteString.charCodeAt(i);\n      }\n      return new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  uploadPhoto () {\n        \n        const body = new FormData();\n        // body.append('full_name', this.props.login.full_name);\n\n        if (this.props.login.profile_photo) {\n          const file = this.props.login.profile_photo;\n          body.append('profile_picture', {\n            uri: file,\n            name: uuid() + '.jpg',\n            type: 'image/jpeg'\n          });\n        }\n\n        apiFetcher.getData('update_profile', {\n            method: 'POST',\n            // mode: 'no-cors',\n            body\n        })\n        .then(response => response.json())\n        .then(result => {\n            apiFetcher.getData('user_online')\n            .then(response => response.json())\n            .then(result => {\n                if (result.result === 'Success' && result.message === 'OK') {\n                  this.props.setInfo(result.data.profile);\n                  this.props.setUserLoggedIn(true);\n                }\n            })\n        });\n  }\n\n  render() {\n    const profilePhoto = this.props.login.profile_photo || this.props.login.info.profile_picture;\n    return (\n        <React.Fragment>\n            <View style={{\n                flexDirection: 'column',\n                height: 50\n            }}>\n                <Toolbar \n                    leftElement={<Image source={logo} style={{\n                        width: 30,\n                        height: 30\n                    }} />}\n                    centerElement={<Text style={style.toolbarHeader}>Select Profile Picture</Text>}\n                />\n            </View>\n            <View style={style.view}>\n                <Image source={profilePhoto ? { uri: profilePhoto} : noPhoto} style={{ width: 200, height: 200 }} style={style.profile_photo} />\n                \n                <View style={{marginBottom: 5}}>\n                  <Button onPress={this._pickImage} title=\"Pick an image\" />\n                </View>\n\n                <View style={{marginBottom: 5}}>\n                  <Button onPress={this._takePhoto} title=\"Take a photo\" />\n                </View>\n                \n                <View>\n                  <Button title=\"Finalize\" onPress={this.uploadPhoto.bind(this)} />\n                </View>\n            </View>\n        </React.Fragment>\n    );\n  }\n\n  _takePhoto = async () => {\n    const {\n      status: cameraPerm\n    } = await Permissions.askAsync(Permissions.CAMERA);\n\n    const {\n      status: cameraRollPerm\n    } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n    // only if user allows permission to camera AND camera roll\n    if (cameraPerm === 'granted' && cameraRollPerm === 'granted') {\n      let result = await ImagePicker.launchCameraAsync({\n        // allowsEditing: true,\n        // aspect: [1, 1],\n        // quality: 1\n      });\n\n      if (!result.cancelled) {\n        this.props.setProfilePhoto(result.uri);\n      }\n    }\n  };\n\n  _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        this.props.setProfilePhoto(result.uri);\n      }\n    } catch (E) {\n      console.log(E);\n    }\n  };\n}\n\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setProfilePhoto: payload => dispatch({type: actions.PROFILE_SET_PROFILE_PHOTO, payload}),\n    setFullName: payload => dispatch({type: actions.PROFILE_SET_FULL_NAME, payload}),\n    setInfo: payload => dispatch({type: actions.PROFILE_SET_INFO, payload}),\n    setUserLoggedIn: payload => dispatch({type: actions.PROFILE_SET_USER_LOGGED_IN, payload})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectProfilePicture);","import React from 'react';\nimport {connect} from 'react-redux';\nimport uuid from 'react-uuid';\nimport style from './style';\nimport {\n    TextInput,\n    View,\n    Image,\n    Alert\n} from 'react-native';\nimport { Text, Button } from '../../shared';\n\nimport {\n    Toolbar\n} from 'react-native-material-ui';\n\n\n\nimport ApiFetcher from '../../../api_fetcher';\nimport config from '../../../config.json';\nimport { actions } from '../../stores';\nconst logo = require('../../../assets/images/logo.png');\nconst apiFetcher = new ApiFetcher();\n\nclass EnterCodeView extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            width: \"70%\"\n        }\n    }\n\n    componentDidMount () {\n      const body = new FormData();\n      // data.append('full_name', '');\n      body.append('phone', this.props.login.dial_code + this.props.login.phone);\n\n      apiFetcher.getData('sign_up', {\n          method: 'POST',\n          body,\n      }, false)\n      .then(response => response.json())\n      .then(result => {\n          if ((result.result === 'Success' && result.message === 'OK')  || (result.result === 'Fail' && result.message === 'Registered')) {\n              this.props.setFirebaseUid(result.data.uid);\n              this.props.setToken(result.data.token);\n              this.props.setFullName(result.data.full_name),\n              this.props.setInfo(result.data);\n          } else {\n              Alert.alert(\"Warning\", \"Something went wrong. Please try again!\");\n              this.props.navigation.replace('login');\n          }\n      })\n      .catch(error => {\n            Alert.alert(\"Warning\", \"Something went wrong. Please try again!\");\n            this.props.navigation.replace('login');\n      })\n    }\n\n    finalize () {\n        if (!this.props.login.full_name) {\n            return Alert.alert(\n                \"Warning\",\n                \"Enter your full name\",\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n        }\n        \n        const body = new FormData();\n        body.append('full_name', this.props.login.full_name);\n\n        apiFetcher.getData('update_profile', {\n            method: 'POST',\n            // mode: 'no-cors',\n            body\n        })\n        .then(response => response.json())\n        .then(result => {\n            if (result.result === 'Success') {\n                const body = new FormData();\n                body.append('last_location', null);\n                // body.append('created_status', '-1'); // excluding created bottles field\n                // body.append('incoming_status', '-1') // excluding incoming bottles field\n\n                apiFetcher.getData('user_online', {\n                    method: 'POST',\n                    body\n                })\n                .then(response => response.json())\n                .then(result => {\n                    if (result.result === 'Success' && result.message === 'OK') {\n                        this.props.setInfo(result.data.profile);\n                        this.props.navigation.replace('select_profile_picture');\n                    }\n                });\n            }\n        });\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <View style={{\n                    flexDirection: 'column',\n                    height: 50\n                }}>\n                    <Toolbar \n                        leftElement={<Image source={logo} style={{\n                            width: 30,\n                            height: 30\n                        }} />}\n                        centerElement={<Text style={style.toolbarHeader}>Your Full Name</Text>}\n                    />\n                </View>\n                <View style={style.view}>\n                    <Text style={{\n                        fontSize: 14,\n                        color: '#666666',\n                        marginBottom: 20,\n                        width: this.state.width,\n                        textAlign: 'center'\n                    }}>Enter your full name</Text>\n                    <TextInput \n                        value={this.props.login.full_name}\n                        onChangeText={fullName => this.props.setFullName(fullName)}\n                        style={{\n                            borderBottomColor: '#cccccc',\n                            borderBottomWidth: 1,\n                            marginTop: 20,\n                            marginBottom: 20,\n                            width: this.state.width,\n                            textAlign: 'center'\n                        }} \n                    />\n                    \n                    <Button title=\"Next\" onPress={this.finalize.bind(this)} />\n                </View>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setFullName: payload => dispatch({type: actions.PROFILE_SET_FULL_NAME, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n    setToken: payload => dispatch({type: actions.PROFILE_SET_TOKEN, payload}),\n    setInfo: payload => dispatch({type: actions.PROFILE_SET_INFO, payload})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterCodeView);","import {connect} from 'react-redux';\nimport React, { Component } from 'react';\nimport {Toolbar} from 'react-native-material-ui';\nimport {Icon} from 'react-native-elements';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TouchableHighlight,\n  ImageBackground,\n  Platform\n} from 'react-native';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport style from './style';\n\nconst noPhoto = require('../../../assets/images/no-photo.png');\nconst oceanBg = require('../../../assets/images/ocean-bg.jpg');\nconst Tab = createMaterialTopTabNavigator();\n\nclass ProfileView extends Component {\n\n  componentWiMount () {\n    \n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n            <ImageBackground source={oceanBg} style={styles.header}>\n            <Toolbar \n                    leftElement='menu'\n                    onLeftElementPress={() => this.props.navigation.openDrawer()}\n                    centerElement={<Text style={style.toolbarHeader}>My Profile</Text>}\n                />\n            </ImageBackground>\n            \n            <TouchableHighlight style={styles.avatar} onPress={() => this.props.navigation.navigate('Update profile')}>\n              <View>\n                <Image style={styles.avatarImage} source={this.props.login.info.profile_picture ? { uri: this.props.login.info.profile_picture } : noPhoto} />\n                <Icon color='#555' size={30} name='edit' style={{\n                  marginTop: 110,\n                  marginLeft: 100,\n                }} />\n              </View>\n            </TouchableHighlight>\n          <View style={styles.body}>\n            <View style={styles.bodyContent}>\n              <Text style={styles.name}>{this.props.login.info.full_name}</Text>\n              <Tab.Navigator style={styles.tabNavigation}>\n                <Tab.Screen name=\"Incoming bottles\" component={() => {\n                  return <View style={{height: 500}}><Text>Home</Text></View>\n                }} />\n                <Tab.Screen name=\"Outgoing bottles\" component={() => {\n                  return <View><Text>Settings</Text></View>\n                }} />\n              </Tab.Navigator>\n            </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setProfilePhoto: payload => dispatch({type: actions.PROFILE_SET_PROFILE_PHOTO, payload}),\n  setFullName: payload => dispatch({type: actions.PROFILE_SET_FULL_NAME, payload}),\n  setInfo: payload => dispatch({type: actions.PROFILE_SET_INFO, payload}),\n  setPhone: payload => dispatch({type: actions.PROFILE_SET_PHONE, payload}),\n  setDialCode: payload => dispatch({type: actions.PROFILE_SET_DIAL_CODE, payload}),\n  setCode: payload => dispatch({type: actions.PROFILE_SET_CODE, payload}),\n  setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n  setUserLoggedIn: payload => dispatch({type: actions.PROFILE_SET_USER_LOGGED_IN, payload})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileView);\n\nconst styles = StyleSheet.create({\n  header:{\n    backgroundColor: \"#555\",\n    height: 200,\n  },\n  avatar: {\n    alignSelf:'center',\n    position: 'absolute',\n    marginTop:130,\n    width: '40%',\n    height: 140,\n    // borderColor: 'red',\n    // borderWidth: 1\n  },\n  avatarImage: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    alignSelf:'center',\n    position: 'absolute',\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom:10,\n  },\n  name:{\n    fontSize:22,\n    color:\"#FFFFFF\",\n    fontWeight:'600',\n  },\n  body:{\n    marginTop:40,\n    // borderColor: 'red',\n    // borderWidth: 1,\n    height: '100%'\n  },\n  bodyContent: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop:30,\n  },\n  name:{\n    fontSize:28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  info:{\n    fontSize:16,\n    color: \"#00BFFF\",\n    marginTop:10\n  },\n  description:{\n    fontSize:16,\n    color: \"#696969\",\n    marginTop:10,\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    marginTop:10,\n    height:45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom:20,\n    width:250,\n    borderRadius:30,\n    backgroundColor: \"#00BFFF\",\n  },\n  editIcon: {\n    marginTop: 110,\n    marginLeft: 100,\n  },\n  tabNavigation: {\n    borderColor: 'transparent',\n    borderWidth: 0,\n    width: '100%',\n    marginTop: 20,\n  }\n});","import * as React from 'react';\nimport {connect} from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport {decode, encode} from 'base-64';\nimport uuid from 'react-uuid';\n\nimport {\n    View,\n    ScrollView,\n    Image,\n    TextInput\n} from 'react-native';\nimport {Text, Button} from '../../shared';\n\nimport {\n    Toolbar\n} from 'react-native-material-ui';\n\nimport ApiFetcher from '../../../api_fetcher';\nconst apiFetcher = new ApiFetcher();\n\nimport style from '../login_activity/style';\nimport { actions } from '../../stores';\nconst logo = require('../../../assets/images/logo.png');\nconst noPhoto = require('../../../assets/images/no-photo.png');\n\n\nclass UpdateProfile extends React.Component {\n\n    constructor () {\n        super();\n\n        this.state = {\n            width: \"70%\"\n        }\n    }\n\n  b64toBlob(dataURI) {\n      var byteString = decode(dataURI.split(',')[1]);\n      var ab = new ArrayBuffer(byteString.length);\n      var ia = new Uint8Array(ab);\n\n      for (var i = 0; i < byteString.length; i++) {\n          ia[i] = byteString.charCodeAt(i);\n      }\n      return new Blob([ab], { type: 'image/jpeg' });\n  }\n\n  updateProfile () {\n        const body = new FormData();\n        // body.append('full_name', this.props.login.full_name);\n\n        if (this.props.login.profile_photo) {\n          const file = this.props.login.profile_photo;\n          body.append('profile_picture', {\n            uri: file,\n            name: uuid() + '.jpg',\n            type: 'image/jpeg'\n          });\n        }\n\n        if (this.props.login.full_name) {\n            body.append('full_name', this.props.login.full_name)\n        }\n\n        apiFetcher.getData('update_profile', {\n            method: 'POST',\n            // mode: 'no-cors',\n            body\n        })\n        .then(response => response.json())\n        .then(result => {\n            apiFetcher.getData('user_online')\n            .then(response => response.json())\n            .then(result => {\n                if (result.result === 'Success' && result.message === 'OK') {\n                  this.props.setInfo(result.data.profile);\n                  this.props.navigation.navigate('Profile');\n                }\n            })\n        });\n  }\n\n  render() {\n    const profilePhoto = this.props.login.profile_photo || this.props.login.info.profile_picture;\n    return (\n        <ScrollView>\n            <View style={{\n                flexDirection: 'column',\n                height: 50\n            }}>\n                <Toolbar \n                    leftElement='menu'\n                    onLeftElementPress={() => this.props.navigation.openDrawer()}\n                    centerElement={<Text style={style.toolbarHeader}>Update Profile</Text>}\n                />\n            </View>\n            <View style={style.view}>\n                <Image source={profilePhoto ? { uri: profilePhoto} : noPhoto} style={{ width: 200, height: 200 }} style={style.profile_photo} />\n                <TextInput \n                    placeholder=\"Your full name\"\n                    value={this.props.login.full_name || this.props.login.info.full_name}\n                    onChangeText={fullName => this.props.setFullName(fullName)}\n                    style={{\n                        borderBottomColor: '#cccccc',\n                        borderBottomWidth: 1,\n                        marginTop: 20,\n                        marginBottom: 20,\n                        width: this.state.width,\n                        fontSize: 20,\n                        textAlign: 'center'\n                    }} \n                />\n                \n                <View style={{marginBottom: 5}}>\n                  <Button onPress={this._pickImage} title=\"Pick an image\" />\n                </View>\n\n                <View style={{marginBottom: 5}}>\n                  <Button onPress={this._takePhoto} title=\"Take a photo\" />\n                </View>\n                <View>\n                  <Button title=\"Save\" onPress={this.updateProfile.bind(this)} />\n                </View>\n            </View>\n        </ScrollView>\n    );\n  }\n\n  _takePhoto = async () => {\n    const {\n      status: cameraPerm\n    } = await Permissions.askAsync(Permissions.CAMERA);\n\n    const {\n      status: cameraRollPerm\n    } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n    // only if user allows permission to camera AND camera roll\n    if (cameraPerm === 'granted' && cameraRollPerm === 'granted') {\n      let result = await ImagePicker.launchCameraAsync({\n        // allowsEditing: true,\n        // aspect: [1, 1],\n        // quality: 1\n      });\n\n      if (!result.cancelled) {\n        this.props.setProfilePhoto(result.uri);\n      }\n    }\n  };\n\n  _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        this.props.setProfilePhoto(result.uri);\n      }\n    } catch (E) {\n      console.log(E);\n    }\n  };\n}\n\n\nconst mapStateToProps = state => ({\n    login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setProfilePhoto: payload => dispatch({type: actions.PROFILE_SET_PROFILE_PHOTO, payload}),\n    setFullName: payload => dispatch({type: actions.PROFILE_SET_FULL_NAME, payload}),\n    setInfo: payload => dispatch({type: actions.PROFILE_SET_INFO, payload}),\n    setUserLoggedIn: payload => dispatch({type: actions.PROFILE_SET_USER_LOGGED_IN, payload})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);","import UpdateProfile from './UpdateProfile';\n\nexport default UpdateProfile;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    LoginView,\n    EnterNumberView,\n    EnterCodeView,\n    SelectProfilePicture,\n    EnterFullNameView,\n    ProfileView\n} from './activities/login_activity';\nimport UpdateProfile from './activities/UpdateProfile';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Icon } from 'react-native-elements';\n\nimport { actions } from './stores';\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nimport ApiFetcher from '../api_fetcher';\nimport { BackHandler } from 'react-native';\nconst apiFetcher = new ApiFetcher();\n\n\nclass SplashScreenActivity extends React.Component {\n    constructor () {\n        super();\n\n        this._interval;\n        this.callUserOnline = this.callUserOnline.bind(this);\n    }\n\n\n  componentDidMount () {\n    this.callUserOnline();\n\n    // if (this.props.login.isUserLoggedIn === true) {\n    //   this._interval = setInterval(this.callUserOnline, 15000);\n    // } else {\n    //   clearInterval(this._interval);\n    // }\n  }\n\n  callUserOnline () {\n    apiFetcher.getData('user_online')\n    .then(response => response.json())\n    .then(result => {\n        if (result.result === 'Success' && result.message === 'OK') {\n            if (this.props.login.isUserLoggedIn === false) {\n              this.props.setUserLoggedIn(true);\n            }\n            this.props.setInfo(result.data.profile);\n        } else {\n            this.props.setInfo({});\n            this.props.setUserLoggedIn(false);\n        }\n    });\n  }\n\n  render () {\n    return <NavigationContainer>\n      {this.props.login.isUserLoggedIn ? (\n        <Drawer.Navigator initialRouteName=\"Profile\"\n        drawerType='front'\n        drawerPosition='left'\n        drawerStyle={{\n          // width: '30%'\n        }}\n        statusBarAnimation={true}\n        // overlayColor='transparent'\n        edgeWidth={100}\n        minSwipeDistance={100}\n        // overlayColor={'#000'}\n        hideStatusBar={false}\n        screenOptions={{\n          drawerIcon: ({ focused, color, size }) => <Icon color={color} size={size} name={focused ? 'add-box' : 'add-box'} />,\n        }}>\n          <Drawer.Screen name=\"Profile\" component={ProfileView} />\n          <Drawer.Screen name=\"Update profile\" component={UpdateProfile} />\n        </Drawer.Navigator>\n      ) : (\n      <Stack.Navigator mode=\"modal\" initialRouteName=\"login\" screenOptions={{\n        headerShown: false\n      }}>\n        <Stack.Screen name=\"login\" component={LoginView} />\n        <Stack.Screen name=\"enter_number\" component={EnterNumberView} />\n        <Stack.Screen name=\"enter_code\" component={EnterCodeView} />\n        <Stack.Screen name=\"enter_full_name\" component={EnterFullNameView} />\n        <Stack.Screen name=\"select_profile_picture\" component={SelectProfilePicture} />\n      </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  }\n}\n\nconst mapStateToProps = state => ({\n  login: state.loginReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setFullName: payload => dispatch({type: actions.PROFILE_SET_FULL_NAME, payload}),\n    setFirebaseUid: payload => dispatch({type: actions.PROFILE_SET_FIREBASE_UID, payload}),\n    setToken: payload => dispatch({type: actions.PROFILE_SET_TOKEN, payload}),\n    setInfo: payload => dispatch({type: actions.PROFILE_SET_INFO, payload}),\n    setUserLoggedIn: payload => dispatch({type: actions.PROFILE_SET_USER_LOGGED_IN, payload})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SplashScreenActivity);","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './components/stores';\nimport SplashScreenActivity from './components/SplashScreenActivity';\n\n\n\nexport default class App extends React.Component {\n\n  render () {\n\n    return (\n      <Provider store={store}>\n        <SplashScreenActivity />\n      </Provider>\n    );\n  }\n}\n","import { registerRootComponent } from 'expo';\nimport { Provider } from 'react-redux';\nimport store from './components/stores';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}